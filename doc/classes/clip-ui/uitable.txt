$CLASSNAME$
	UITable
$SUMMARY$
	Class UITable
$LANG_RU$
	Класс UITable
$ABOUT$
	Class of table (multicolumn list).
$LANG_RU$
	Класс таблицы (многоколоночного списка).
$SYNTAX$
	UITable(<columns>)	--> UITable object
$LANG_RU$
	UITable(<columns>)	--> Объект UITable
$ATTRIBUTES$
	<className>	- Class name. Value should be "UITable".
	<columns>	- Array of <link linkend="classuitablecolumn">UITableColumn</link> objects. Table columns.
	<onSelect> 	- Code block. Action that will be call on row selection by double click or 'Enter' key pressed.
$LANG_RU$
	<className>	- Имя класса. Значение: "UITable".
	<columns>	- Массив объектов <link linkend="classuitablecolumn">UITableColumn</link>. Столбцы таблицы.
	<onSelect> 	- Блок кода. Действие, вызываемое при выборе строки двойным щелчком мыши или нажатием клавиши 'Enter'.

$METHODNAME$
	UITable()
$SUMMARY$
	Constructor. Create table.
$LANG_RU$
	Конструктор. Создать таблицу.
$SYNTAX$
	UITable(<columns>)	--> UITable object
$ARGUMENTS$
	<columns>	- Array of <link linkend="classuitablecolumn">UITableColumn</link> objects. Table columns.
$LANG_RU$
	<columns>	- Массив объектов <link linkend="classuitablecolumn">UITableColumn</link>. Столбцы таблицы.
$ENDMETHOD$

$METHODNAME$
	addRow()
$SUMMARY$
	Add row into table.
$LANG_RU$
	Добавить строку в таблицу.
$SYNTAX$
	addRow(<data>,[<id>])	--> <oTableItem>
$ARGUMENTS$
	<data>		- Array of strings. Array of values by columns.
	<id>		- String. Row identifier.
$LANG_RU$
	<data>		- Mассив строк. Массив значений по столбцам соответственно.
	<id>		- Строка. Идентификатор строки.
$RETURNS$
	String. Row address.
$LANG_RU$
	Строка. Адрес строки.
$ENDMETHOD$

$METHODNAME$
	setRow()
$SUMMARY$
	Fill row by values.
$LANG_RU$
	Заполнить строку значениями.
$SYNTAX$
	setRow(<row>,<data>,[<id>])
$ARGUMENTS$
	<row>		- Number. Row number (from 1).
	<data>		- Array or object. Array of values by columns or object contains fields with column names.
	<id>		- String. Node identifier.
$LANG_RU$
	<row>		- Число. Номер строки (c 1).
	<data>		- Mассив или объект. Массив значений по столбцам или объект, содержащий поля с именами столбцов.
	<id>		- Строка. Идентификатор элемента.
$EXAMPLES$
	table:setRow( 1, { 1, "20.10.03", '"John Corp."', 20000.00, .T. } )
	m := map()
	m:num := 2
	m:date := "29.10.03"
	m:company := '"John Corp."'
	m:sum := 5500.00
	m:flag := .F.
	table:setRow( 2, m )
$ENDMETHOD$


$METHODNAME$
	getRow()
$SUMMARY$
	Get row from table as object with values.
$LANG_RU$
	Получить строку из таблицы в виде объекта со значениями.
$SYNTAX$
	getRow(<row>)	--> oRow
$ARGUMENTS$
	<row>		- Number. Row number (from 1).
$LANG_RU$
	<row>		- Число. Номер строки (c 1).
$RETURNS$
	Object contains fields with column names. 
$LANG_RU$
	Объект, содержащий поля с именами столбцов.
$EXAMPLES$
	oRow := table:getRow(2)
	? oRow:company
$ENDMETHOD$


$METHODNAME$
	removeRow()
$SUMMARY$
	Remove row from table.
$LANG_RU$
	Удалить строку из таблицы.
$SYNTAX$
	removeRow(<row>)
$ARGUMENTS$
	<row>		- Number. Row number (from 1).
$LANG_RU$
	<row>		- Число. Номер строки (c 1).
$EXAMPLES$
	table:removeRow(2)
$ENDMETHOD$


$METHODNAME$
	setAction()
$SUMMARY$
	Set action that will be call on selection by double click or 'Enter' key pressed.
$LANG_RU$
	Указать действие, вызываемое при выборе строки двойным щелчком мыши или нажатием клавиши 'Enter'.
$SYNTAX$
	setAction(<signal>,<action>)
$ARGUMENTS$
	<signal>	- String. Signal name. Should be 'selected'.
	<action>	- Code block. Action.
$LANG_RU$
	<signal>	- Строка. Название сигнала. Допустимое значение: 'selected'.
	<action>	- Блок кода. Действие.
$ENDMETHOD$


$METHODNAME$
	clear()
$SUMMARY$
	Clear table: remove all rows.
$LANG_RU$
	Очистить таблицу: удалить все строки.
$SYNTAX$
	clear()
$ENDMETHOD$


$METHODNAME$
	getSelection()
$SUMMARY$
	Get selected row identifier.
$LANG_RU$
	Возвращает идентификатор выделенной строки.
$SYNTAX$
	getSelection()	--> <sRow>
$RETURNS$
	The identifier of selected row.
$LANG_RU$
	Идентификатор выделенной строки.
$ENDMETHOD$


$METHODNAME$
	getValue()
$SUMMARY$
	Get user identifier of selected row.
$LANG_RU$
	Возвращает пользовательский идентификатор выделенной строки.
$SYNTAX$
	getValue()	--> <id>
$RETURNS$
	The user identifier of selected row.
$LANG_RU$
	Пользовательский идентификатор выделенной строки.
$ENDMETHOD$


$METHODNAME$
	setValue()
$SUMMARY$
	Seе focus to row by its id.
$LANG_RU$
	Устанавливает фокус на строку с заданным идентификатором.
$SYNTAX$
	setValue(<id>) 
$ARGUMENTS$
	<id>		- String. Row identifier.
$LANG_RU$
	<id>		- Строка. Идентификатор строки.
$ENDMETHOD$

$METHODNAME$
	savePosition()
$SUMMARY$
	Get current selected row position.
$LANG_RU$
	Сохранение текущей выделенной строки.
$SYNTAX$
	savePosition()	--> <aPos>
$RETURNS$
	Array with selected row position: row address, column address, horizontal and vertical adjustments.
$LANG_RU$
	Массив с координатами текущей выделенной строки: адреса строки и столбца, горизонтальное и вертикальное смещение.
$ENDMETHOD$


$METHODNAME$
	restorePosition()
$SUMMARY$
	Restore saved row position.
$LANG_RU$
	Восстановление cохранённой позиции строки.
$SYNTAX$
	restorePosition(<aPos>)
$ARGUMENTS$
	<aPos>		- Array with selected row position returned by savePosition() function.
$LANG_RU$
	<aPos>		- Массив с координатами текущей выделенной строки, возвращаемый функцией savePosition().
$ENDMETHOD$


$EXAMPLES$
	cols := array(0)
	aadd( cols, UITableColumn( 'num', 'N', TABLE_COLUMN_COUNTER ) )
	aadd( cols, UITableColumn( 'date', 'Date', TABLE_COLUMN_DATE ) )
	aadd( cols, UITableColumn( 'company', 'Company', TABLE_COLUMN_TEXT ) )
	aadd( cols, UITableColumn( 'sum', 'Sum', TABLE_COLUMN_NUMBER ) )
	aadd( cols, UITableColumn( 'flag', 'Mark', TABLE_COLUMN_CHECK ) )
	table := UITable( cols )
	table:addRow( { 1, "20.10.03", '"John Corp."', 20000.00, .T. } )

$PLATFORMS$
	No dependies of platform.
$LANG_RU$
	Не зависит от платформы.
$SEEALSO$
	UITABLECOLUMN UITABLEEDIT UITREE
$AUTHOR$
	Andrey Cherepanov <skull@eas.lrn.ru>
$LANG_RU$
	Андрей Черепанов <skull@eas.lrn.ru>
$LASTDATE$
