$FUNCNAME$
  DBSETORDER()
$CATEGORY$
  DATABASE
$SUMMARY$
   Set the controlling order
$LANG_RU$
   Устанавливает управляющий индекс.
$SYNTAX$
     DBSETORDER(<nOrderNum>) --> NIL
$LANG_RU$
     DBSETORDER( <номер индексного файла> ) --> NIL
$ARGUMENTS$
     <nOrderNum> is a numeric value that specifies which of the active
     indexes is to be the controlling index.
$LANG_RU$
     <номер индексного файла> - числовая величина, которая определяет,
     какой из активных индексов должен быть управляющим.
$RETURNS$
     DBSETORDER() always returns NIL.
$LANG_RU$
     DBSETORDER() всегда возвращает NIL.
$DESCRIPTION$
     DBSETORDER() controls which of the current work area's active indexes is
     the controlling index.  The controlling index is the index which
     determines the logical order of records in the work area.

     Active indexes are numbered from 1 to the number of active indexes,
     based on the order in which the indexes were opened.  <nOrderNum>
     specifies the number of the desired index.

     DBSETORDER() performs the same function as the standard SET ORDER
     command.  For more information, refer to the SET ORDER command.
$LANG_RU$
     DBSETORDER() определяет, какой из активных индексов текущей рабочей
     области является управляющим индексом. Управляющий индекс - это
     индекс, определяющий логический порядок записей в рабочей области.

     Активные индексы пронумерованы от 1 до общего числа активных
     индексов, в порядке, в котором эти индексы были открыты. <номер
     индексного файла> определяет номер желаемого индекса.

     DBSETORDER() выполняет те же функции, что и стандартная команда
     SET ORDER. Более подробную информацию смотрите в команде SET ORDER.
$EXAMPLES$
       This example sets the second named index, Age, as the
	controlling index:

	USE Employee NEW
	SET INDEX TO Name, Age
	DBSETORDER(2)
$LANG_RU$
	  USE Employees NEW
	  SET INDEX TO Name, Age
	  DBSETORDER(2)
$SEEALSO$
  DBCLEARINDEX(),DBCREATEINDEX(),DBREINDEX(),DBSETINDEX()
$END$
