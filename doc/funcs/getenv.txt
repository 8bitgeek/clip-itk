$FUNCNAME$
  GETENV()
$CATEGORY$
  SYSTEM,ENVIRONMENT
$SUMMARY$
   Retrieve the contents of a OS environment variable
$LANG_RU$
   Возвращает значение переменной среды OS.
$SYNTAX$
     GETENV(<cEnvironmentVariable>) --> cString
$LANG_RU$
     GETENV (<переменная среды OS>) --> строка
$ARGUMENTS$
     <cEnvironmentVariable> is the name of the OS environment variable.
     When specifying this argument, you can use any combination of uppercase
     and lowercase letters; GETENV() is not case-sensitive.
$LANG_RU$
     <переменная среды OS> - это имя переменной среды OS. При задании
     этого аргумента можно использовать любую комбинацию строчных и
     заглавных букв: GETENV() к этому нечувствительна.
$RETURNS$
     GETENV() returns the contents of the specified OS environment variable
     as a character string.  If the variable cannot be found, GETENV()
     returns a null string ("").
$LANG_RU$
     GETENV() возвращает содержимое заданной переменной среды OS в виде
     символьной строки. Если переменная не может быть найдена, GETENV()
     возвращает пустую строку ("").
$DESCRIPTION$
     GETENV() is an environment function that lets you retrieve information
     from the OS environment into an application program.  Typically, this
     is configuration information, including path names, that gives the
     location of files (database, index, label, or reports).  This function
     is particularly useful for network environments.
$LANG_RU$
     GETENV() - это функция среды, которая позволяет вам получать в
     прикладной программе информацию о конфигурации среды OS. Как
     правило, это информация о размещении файлов ( базы данных, индекса,
     меток или отчетов).  Эта функция особенно полезна в сетевой среде.
$EXAMPLES$
       This example retrieves the current OS PATH setting, making it
	the current xClipper PATH:

	cPath := GETENV("PATH")
	SET PATH TO (cPath)

       This example uses environment variables to configure the
	specific locations of files.  When you set up a system, define
	environment variables that contain the location of various file types
	as well as the xCLIPPER environment variable.

	C>SET LOC_DBF=<database file path>
	C>SET LOC_NTX=<index file path>
	C>SET LOC_RPT=<report file path>

	In the configuration section of your application program, assign the
	contents of the environment variables to variables.  Then when you
	access a file, preface the reference with the path variable as
	follows:

	cDdfDirectory := GETENV("LOC_DBF")
	USE (cDdfDirectory + "Invoices")
$LANG_RU$
      Этот пример считывает текущую установку маршрута доступа в OS,
       делая его текущим для xClipper:

       cPath = GETENV("PATH")
       SET PATH TO (cPath)

      Этот пример демонстрирует, как использовать переменные среды,
       чтобы получить нужную конфигурацию размещения файлов. Когда вы
       устанавливаете систему, опишите переменные среды, которые
       определяют размещение различных типов файлов наряду с переменной
       среды xClipper.

       SET LOC_DBF=<путь доступа к файлу базы данных>
       SET LOC_NTX=<путь доступа к индексам>
       SET LOC_RPT=<путь доступа к файлам отчета>

      В разделе конфигурации вашей прикладной программы присвойте
       параметры среды этим переменным. Затем, когда вы получите доступ к
       файлу, сформируйте ссылку с помощью переменной PATH, как показано
       ниже:

       cDbfDirectory = GETENV("LOC_DBF")
       USE (cDbfDirectory + "Invoices")
$SEEALSO$

$END$
